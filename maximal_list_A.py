""" Даны два строковых представления чисел A и B. Нужно максимизировать A, заменив в нём любую
 цифру на цифру из B. Каждую цифру B можно использовать только один раз.

    A (54698)  B(678)
    
    1. сортировать по убыванию список В
    2. Сравнивать каждую А[..] c B[0] и кикать B[0] в случае успеха
    
"""
A = "54698"
B = "857"

def maximaze(A, B):
    lister_A = list(map(int, A))
    lister_B = sorted(map(int, B), reverse=True)

    for i in range(len(lister_A)):
        for a in lister_B:
            if a > lister_A[i]:
                lister_A[i] = a
                lister_B.remove(a)
                break
    return ''.join(map(str, lister_A))

print(maximaze(A, B))

# Алгоритм решения:
"""
Строковые представления преобразуем в списки, сортируем B по убыванию, чтобы на каждой итерации выбирать наибольшее значение.
Далее проходим по элементам списка А и для каждой цифры ищем первую цифру из B, которая больше текущей. В случае успеха удаляем это число из списка B(по условиям задачи)
когда два цикла пройдены, возвращаем обновленный список A преобразованный обратно к строке.

Временная сложность:
т.к используем map в любом случае проходим по каждому элементу списка А и В, 
это O(n) пусть будет O(A) и O(B)
Встроенный метод сортировки "sorted" имеет сложность  O(B log B).
Вложенные циклы O(A·B)
Метод удаление remove O(B)
Итого: O(A*B^2)
"""